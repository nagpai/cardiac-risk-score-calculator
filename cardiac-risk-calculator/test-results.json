{
  "timestamp": "2025-08-10T11:40:55.308Z",
  "summary": {
    "total": 5,
    "passed": 0,
    "failed": 5,
    "successRate": 0
  },
  "results": [
    {
      "name": "Unit Tests",
      "status": "FAILED",
      "duration": 0,
      "error": "Command failed: npm run test:run -- --reporter=verbose\nstderr | src/components/Forms/__tests__/FormField.test.tsx > FormField > renders basic text input correctly\nYou provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.\n\nstderr | src/components/Forms/__tests__/FormField.test.tsx > FormField > displays required indicator when required\nYou provide"
    },
    {
      "name": "Integration Tests",
      "status": "FAILED",
      "duration": 0,
      "error": "Command failed: npm run test:run -- src/__tests__/integration.test.tsx --reporter=verbose\n\n⎯⎯⎯⎯⎯⎯⎯ Failed Tests 8 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/__tests__/integration.test.tsx > Integration Tests - Complete User Workflows > should complete full risk calculation workflow\n FAIL  src/__tests__/integration.test.tsx > Integration Tests - Complete User Workflows > should handle unit conversion workflow\n FAIL  src/__tests__/integration.test.tsx > Integration Tests - Complete User Workflows > should handle form va"
    },
    {
      "name": "Accessibility Tests",
      "status": "FAILED",
      "duration": 0,
      "error": "Command failed: npm run test:run -- src/__tests__/accessibility.test.tsx --reporter=verbose\n\n⎯⎯⎯⎯⎯⎯ Failed Tests 13 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/__tests__/accessibility.test.tsx > Accessibility Tests > should have no accessibility violations on initial load\n FAIL  src/__tests__/accessibility.test.tsx > Accessibility Tests > should have proper heading hierarchy\n FAIL  src/__tests__/accessibility.test.tsx > Accessibility Tests > should have proper skip links\n FAIL  src/__tests__/accessibility.test.tsx > Ac"
    },
    {
      "name": "Cross-Browser Tests",
      "status": "FAILED",
      "duration": 0,
      "error": "Command failed: npm run test:run -- src/__tests__/crossBrowser.test.tsx --reporter=verbose\n\n⎯⎯⎯⎯⎯⎯ Failed Tests 17 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/__tests__/crossBrowser.test.tsx > Cross-Browser Compatibility Tests > Chrome Compatibility > should work in Chrome\n FAIL  src/__tests__/crossBrowser.test.tsx > Cross-Browser Compatibility Tests > Chrome Compatibility > should handle Chrome-specific features\n FAIL  src/__tests__/crossBrowser.test.tsx > Cross-Browser Compatibility Tests > Firefox Compatibility > sh"
    },
    {
      "name": "Performance Tests",
      "status": "FAILED",
      "duration": 0,
      "error": "Command failed: npm run test:run -- src/__tests__/performance.test.tsx --reporter=verbose\n\n⎯⎯⎯⎯⎯⎯ Failed Tests 11 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/__tests__/performance.test.tsx > Performance Tests > UI Performance > should render initial UI quickly\n FAIL  src/__tests__/performance.test.tsx > Performance Tests > UI Performance > should handle form input changes efficiently\n FAIL  src/__tests__/performance.test.tsx > Performance Tests > UI Performance > should handle unit conversion efficiently\n FAIL  src/__t"
    }
  ]
}